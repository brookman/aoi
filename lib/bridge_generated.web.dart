// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.62.0.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, unnecessary_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member

import "bridge_definitions.dart";
import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'package:uuid/uuid.dart';
import 'bridge_generated.dart';
export 'bridge_generated.dart';

class NativePlatform extends FlutterRustBridgeBase<NativeWire> with FlutterRustBridgeSetupMixin {
  NativePlatform(FutureOr<WasmModule> dylib) : super(NativeWire(dylib)) {
    setupMixinConstructor();
  }
  Future<void> setup() => inner.init;

// Section: api2wire

  @protected
  Object api2wire_Chrono_Duration(Duration raw) {
    return api2wire_i64(raw.inMilliseconds);
  }

  @protected
  String api2wire_String(String raw) {
    return raw;
  }

  @protected
  Uint8List api2wire_Uuid(UuidValue raw) {
    return api2wire_uint_8_list(raw.toBytes());
  }

  @protected
  Object api2wire_i64(int raw) {
    return castNativeBigInt(raw);
  }

  @protected
  List<dynamic> api2wire_list_search_criteria(List<SearchCriteria> raw) {
    return raw.map(api2wire_search_criteria).toList();
  }

  @protected
  List<dynamic> api2wire_list_search_criterion(List<SearchCriterion> raw) {
    return raw.map(api2wire_search_criterion).toList();
  }

  @protected
  List<dynamic> api2wire_search_criteria(SearchCriteria raw) {
    if (raw is SearchCriteria_Any) {
      return [0, api2wire_list_search_criterion(raw.field0)];
    }
    if (raw is SearchCriteria_All) {
      return [1, api2wire_list_search_criterion(raw.field0)];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> api2wire_search_criterion(SearchCriterion raw) {
    if (raw is SearchCriterion_WithService) {
      return [0, api2wire_Uuid(raw.field0)];
    }
    if (raw is SearchCriterion_NameMatchesExactly) {
      return [1, api2wire_String(raw.field0)];
    }
    if (raw is SearchCriterion_NameContains) {
      return [2, api2wire_String(raw.field0)];
    }

    throw Exception('unreachable');
  }

  @protected
  Uint8List api2wire_uint_8_list(Uint8List raw) {
    return raw;
  }
// Section: finalizer
}

// Section: WASM wire module

@JS('wasm_bindgen')
external NativeWasmModule get wasmModule;

@JS()
@anonymous
class NativeWasmModule implements WasmModule {
  external Object /* Promise */ call([String? moduleName]);
  external NativeWasmModule bind(dynamic thisArg, String moduleName);
  external dynamic /* void */ wire_platform(NativePortType port_);

  external dynamic /* void */ wire_rust_release_mode(NativePortType port_);

  external dynamic /* void */ wire_find_ble_devices(
      NativePortType port_, List<dynamic> search_criteria, Object search_duration);
}

// Section: WASM wire connector

class NativeWire extends FlutterRustBridgeWasmWireBase<NativeWasmModule> {
  NativeWire(FutureOr<WasmModule> module) : super(WasmModule.cast<NativeWasmModule>(module));

  void wire_platform(NativePortType port_) => wasmModule.wire_platform(port_);

  void wire_rust_release_mode(NativePortType port_) => wasmModule.wire_rust_release_mode(port_);

  void wire_find_ble_devices(NativePortType port_, List<dynamic> search_criteria, Object search_duration) =>
      wasmModule.wire_find_ble_devices(port_, search_criteria, search_duration);
}
