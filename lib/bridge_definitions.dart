// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.62.0.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, unnecessary_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member

import 'bridge_generated.io.dart' if (dart.library.html) 'bridge_generated.web.dart';
import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'package:uuid/uuid.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;
import 'package:collection/collection.dart';

part 'bridge_definitions.freezed.dart';

abstract class Native {
  Future<Platform> platform({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kPlatformConstMeta;

  Future<bool> rustReleaseMode({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kRustReleaseModeConstMeta;

  Future<List<BleDevice>> findBleDevices(
      {required List<SearchCriteria> searchCriteria, required Duration searchDuration, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kFindBleDevicesConstMeta;
}

class BleAddress {
  final U8Array6 address;

  BleAddress({
    required this.address,
  });
}

class BleDevice {
  final String? name;
  final BleAddress address;

  BleDevice({
    this.name,
    required this.address,
  });
}

enum Platform {
  Unknown,
  Android,
  Ios,
  Windows,
  Unix,
  MacIntel,
  MacApple,
  Wasm,
}

@freezed
class SearchCriteria with _$SearchCriteria {
  const factory SearchCriteria.any(
    List<SearchCriterion> field0,
  ) = SearchCriteria_Any;
  const factory SearchCriteria.all(
    List<SearchCriterion> field0,
  ) = SearchCriteria_All;
}

@freezed
class SearchCriterion with _$SearchCriterion {
  const factory SearchCriterion.withService(
    UuidValue field0,
  ) = SearchCriterion_WithService;
  const factory SearchCriterion.nameMatchesExactly(
    String field0,
  ) = SearchCriterion_NameMatchesExactly;
  const factory SearchCriterion.nameContains(
    String field0,
  ) = SearchCriterion_NameContains;
}

class U8Array6 extends NonGrowableListView<int> {
  static const arraySize = 6;
  U8Array6(Uint8List inner)
      : assert(inner.length == arraySize),
        super(inner);
  U8Array6.unchecked(Uint8List inner) : super(inner);
  U8Array6.init() : super(Uint8List(arraySize));
}
