// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.31.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables, unused_field

import 'api.dart';
import 'dart:async';
import 'dart:convert';
import 'dart:ffi' as ffi;
import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_io.dart';

abstract class RustLibApiImplPlatform extends BaseApiImpl<RustLibWire> {
  RustLibApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  @protected
  AnyhowException dco_decode_AnyhowException(dynamic raw);

  @protected
  RustStreamSink<AoiPeripheral> dco_decode_StreamSink_aoi_peripheral_Dco(
      dynamic raw);

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  AoiAdapter dco_decode_aoi_adapter(dynamic raw);

  @protected
  AoiCharacteristic dco_decode_aoi_characteristic(dynamic raw);

  @protected
  AoiConnectedPeripheral dco_decode_aoi_connected_peripheral(dynamic raw);

  @protected
  AoiDescriptor dco_decode_aoi_descriptor(dynamic raw);

  @protected
  AoiManufacturerData dco_decode_aoi_manufacturer_data(dynamic raw);

  @protected
  AoiPeripheral dco_decode_aoi_peripheral(dynamic raw);

  @protected
  AoiPeripheralAddress dco_decode_aoi_peripheral_address(dynamic raw);

  @protected
  AoiAdapter dco_decode_box_aoi_adapter(dynamic raw);

  @protected
  AoiPeripheral dco_decode_box_aoi_peripheral(dynamic raw);

  @protected
  AoiPeripheralAddress dco_decode_box_aoi_peripheral_address(dynamic raw);

  @protected
  AoiAdapter dco_decode_box_autoadd_aoi_adapter(dynamic raw);

  @protected
  AoiCharacteristic dco_decode_box_autoadd_aoi_characteristic(dynamic raw);

  @protected
  AoiConnectedPeripheral dco_decode_box_autoadd_aoi_connected_peripheral(
      dynamic raw);

  @protected
  AoiPeripheral dco_decode_box_autoadd_aoi_peripheral(dynamic raw);

  @protected
  FilterCriteria dco_decode_box_autoadd_filter_criteria(dynamic raw);

  @protected
  FilterCriteria dco_decode_filter_criteria(dynamic raw);

  @protected
  FilterCriterion dco_decode_filter_criterion(dynamic raw);

  @protected
  List<String> dco_decode_list_String(dynamic raw);

  @protected
  List<AoiAdapter> dco_decode_list_aoi_adapter(dynamic raw);

  @protected
  List<AoiCharacteristic> dco_decode_list_aoi_characteristic(dynamic raw);

  @protected
  List<AoiDescriptor> dco_decode_list_aoi_descriptor(dynamic raw);

  @protected
  List<AoiManufacturerData> dco_decode_list_aoi_manufacturer_data(dynamic raw);

  @protected
  List<FilterCriterion> dco_decode_list_filter_criterion(dynamic raw);

  @protected
  List<int> dco_decode_list_prim_u_8_loose(dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw);

  @protected
  String? dco_decode_opt_String(dynamic raw);

  @protected
  FilterCriteria? dco_decode_opt_box_autoadd_filter_criteria(dynamic raw);

  @protected
  int dco_decode_u_16(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  U8Array6 dco_decode_u_8_array_6(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  int dco_decode_usize(dynamic raw);

  @protected
  AnyhowException sse_decode_AnyhowException(SseDeserializer deserializer);

  @protected
  RustStreamSink<AoiPeripheral> sse_decode_StreamSink_aoi_peripheral_Dco(
      SseDeserializer deserializer);

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  AoiAdapter sse_decode_aoi_adapter(SseDeserializer deserializer);

  @protected
  AoiCharacteristic sse_decode_aoi_characteristic(SseDeserializer deserializer);

  @protected
  AoiConnectedPeripheral sse_decode_aoi_connected_peripheral(
      SseDeserializer deserializer);

  @protected
  AoiDescriptor sse_decode_aoi_descriptor(SseDeserializer deserializer);

  @protected
  AoiManufacturerData sse_decode_aoi_manufacturer_data(
      SseDeserializer deserializer);

  @protected
  AoiPeripheral sse_decode_aoi_peripheral(SseDeserializer deserializer);

  @protected
  AoiPeripheralAddress sse_decode_aoi_peripheral_address(
      SseDeserializer deserializer);

  @protected
  AoiAdapter sse_decode_box_aoi_adapter(SseDeserializer deserializer);

  @protected
  AoiPeripheral sse_decode_box_aoi_peripheral(SseDeserializer deserializer);

  @protected
  AoiPeripheralAddress sse_decode_box_aoi_peripheral_address(
      SseDeserializer deserializer);

  @protected
  AoiAdapter sse_decode_box_autoadd_aoi_adapter(SseDeserializer deserializer);

  @protected
  AoiCharacteristic sse_decode_box_autoadd_aoi_characteristic(
      SseDeserializer deserializer);

  @protected
  AoiConnectedPeripheral sse_decode_box_autoadd_aoi_connected_peripheral(
      SseDeserializer deserializer);

  @protected
  AoiPeripheral sse_decode_box_autoadd_aoi_peripheral(
      SseDeserializer deserializer);

  @protected
  FilterCriteria sse_decode_box_autoadd_filter_criteria(
      SseDeserializer deserializer);

  @protected
  FilterCriteria sse_decode_filter_criteria(SseDeserializer deserializer);

  @protected
  FilterCriterion sse_decode_filter_criterion(SseDeserializer deserializer);

  @protected
  List<String> sse_decode_list_String(SseDeserializer deserializer);

  @protected
  List<AoiAdapter> sse_decode_list_aoi_adapter(SseDeserializer deserializer);

  @protected
  List<AoiCharacteristic> sse_decode_list_aoi_characteristic(
      SseDeserializer deserializer);

  @protected
  List<AoiDescriptor> sse_decode_list_aoi_descriptor(
      SseDeserializer deserializer);

  @protected
  List<AoiManufacturerData> sse_decode_list_aoi_manufacturer_data(
      SseDeserializer deserializer);

  @protected
  List<FilterCriterion> sse_decode_list_filter_criterion(
      SseDeserializer deserializer);

  @protected
  List<int> sse_decode_list_prim_u_8_loose(SseDeserializer deserializer);

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  String? sse_decode_opt_String(SseDeserializer deserializer);

  @protected
  FilterCriteria? sse_decode_opt_box_autoadd_filter_criteria(
      SseDeserializer deserializer);

  @protected
  int sse_decode_u_16(SseDeserializer deserializer);

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  U8Array6 sse_decode_u_8_array_6(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  int sse_decode_usize(SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_encode_AnyhowException(
      AnyhowException raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    throw UnimplementedError();
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_strict>
      cst_encode_StreamSink_aoi_peripheral_Dco(
          RustStreamSink<AoiPeripheral> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_String(raw.setupAndSerialize(
        codec: DcoCodec(
            decodeSuccessData: dco_decode_aoi_peripheral,
            decodeErrorData: null)));
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_encode_String(String raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_prim_u_8_strict(utf8.encoder.convert(raw));
  }

  @protected
  ffi.Pointer<wire_cst_aoi_adapter> cst_encode_box_aoi_adapter(AoiAdapter raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_aoi_adapter();
    cst_api_fill_to_wire_aoi_adapter(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_aoi_peripheral> cst_encode_box_aoi_peripheral(
      AoiPeripheral raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_aoi_peripheral();
    cst_api_fill_to_wire_aoi_peripheral(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_aoi_peripheral_address>
      cst_encode_box_aoi_peripheral_address(AoiPeripheralAddress raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_aoi_peripheral_address();
    cst_api_fill_to_wire_aoi_peripheral_address(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_aoi_adapter> cst_encode_box_autoadd_aoi_adapter(
      AoiAdapter raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_aoi_adapter();
    cst_api_fill_to_wire_aoi_adapter(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_aoi_characteristic>
      cst_encode_box_autoadd_aoi_characteristic(AoiCharacteristic raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_aoi_characteristic();
    cst_api_fill_to_wire_aoi_characteristic(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_aoi_connected_peripheral>
      cst_encode_box_autoadd_aoi_connected_peripheral(
          AoiConnectedPeripheral raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_aoi_connected_peripheral();
    cst_api_fill_to_wire_aoi_connected_peripheral(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_aoi_peripheral> cst_encode_box_autoadd_aoi_peripheral(
      AoiPeripheral raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_aoi_peripheral();
    cst_api_fill_to_wire_aoi_peripheral(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_filter_criteria> cst_encode_box_autoadd_filter_criteria(
      FilterCriteria raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ptr = wire.cst_new_box_autoadd_filter_criteria();
    cst_api_fill_to_wire_filter_criteria(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_list_String> cst_encode_list_String(List<String> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_String(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_String(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_aoi_adapter> cst_encode_list_aoi_adapter(
      List<AoiAdapter> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_aoi_adapter(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_aoi_adapter(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_aoi_characteristic>
      cst_encode_list_aoi_characteristic(List<AoiCharacteristic> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_aoi_characteristic(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_aoi_characteristic(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_aoi_descriptor> cst_encode_list_aoi_descriptor(
      List<AoiDescriptor> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_aoi_descriptor(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_aoi_descriptor(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_aoi_manufacturer_data>
      cst_encode_list_aoi_manufacturer_data(List<AoiManufacturerData> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_aoi_manufacturer_data(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_aoi_manufacturer_data(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_filter_criterion> cst_encode_list_filter_criterion(
      List<FilterCriterion> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_filter_criterion(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_filter_criterion(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_loose> cst_encode_list_prim_u_8_loose(
      List<int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_prim_u_8_loose(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_encode_list_prim_u_8_strict(
      Uint8List raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_prim_u_8_strict(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_encode_opt_String(
      String? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? ffi.nullptr : cst_encode_String(raw);
  }

  @protected
  ffi.Pointer<wire_cst_filter_criteria>
      cst_encode_opt_box_autoadd_filter_criteria(FilterCriteria? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_filter_criteria(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_encode_u_8_array_6(
      U8Array6 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    final ans = wire.cst_new_list_prim_u_8_strict(6);
    ans.ref.ptr.asTypedList(6).setAll(0, raw);
    return ans;
  }

  @protected
  void cst_api_fill_to_wire_aoi_adapter(
      AoiAdapter apiObj, wire_cst_aoi_adapter wireObj) {
    wireObj.index = cst_encode_usize(apiObj.index);
  }

  @protected
  void cst_api_fill_to_wire_aoi_characteristic(
      AoiCharacteristic apiObj, wire_cst_aoi_characteristic wireObj) {
    wireObj.uuid = cst_encode_String(apiObj.uuid);
    wireObj.service_uuid = cst_encode_String(apiObj.serviceUuid);
    wireObj.properties_bits = cst_encode_u_8(apiObj.propertiesBits);
    wireObj.descriptors = cst_encode_list_aoi_descriptor(apiObj.descriptors);
  }

  @protected
  void cst_api_fill_to_wire_aoi_connected_peripheral(
      AoiConnectedPeripheral apiObj,
      wire_cst_aoi_connected_peripheral wireObj) {
    wireObj.peripheral = cst_encode_box_aoi_peripheral(apiObj.peripheral);
    wireObj.characteristics =
        cst_encode_list_aoi_characteristic(apiObj.characteristics);
  }

  @protected
  void cst_api_fill_to_wire_aoi_descriptor(
      AoiDescriptor apiObj, wire_cst_aoi_descriptor wireObj) {
    wireObj.uuid = cst_encode_String(apiObj.uuid);
    wireObj.service_uuid = cst_encode_String(apiObj.serviceUuid);
    wireObj.characteristic_uuid = cst_encode_String(apiObj.characteristicUuid);
  }

  @protected
  void cst_api_fill_to_wire_aoi_manufacturer_data(
      AoiManufacturerData apiObj, wire_cst_aoi_manufacturer_data wireObj) {
    wireObj.manufacturer_id = cst_encode_u_16(apiObj.manufacturerId);
    wireObj.data = cst_encode_list_prim_u_8_strict(apiObj.data);
  }

  @protected
  void cst_api_fill_to_wire_aoi_peripheral(
      AoiPeripheral apiObj, wire_cst_aoi_peripheral wireObj) {
    wireObj.adapter = cst_encode_box_aoi_adapter(apiObj.adapter);
    wireObj.name = cst_encode_opt_String(apiObj.name);
    wireObj.address = cst_encode_box_aoi_peripheral_address(apiObj.address);
    wireObj.services = cst_encode_list_String(apiObj.services);
    wireObj.manufacturer_data =
        cst_encode_list_aoi_manufacturer_data(apiObj.manufacturerData);
  }

  @protected
  void cst_api_fill_to_wire_aoi_peripheral_address(
      AoiPeripheralAddress apiObj, wire_cst_aoi_peripheral_address wireObj) {
    if (apiObj is AoiPeripheralAddress_MacAddress) {
      var pre_field0 = cst_encode_u_8_array_6(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.MacAddress.field0 = pre_field0;
      return;
    }
    if (apiObj is AoiPeripheralAddress_Uuid) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Uuid.field0 = pre_field0;
      return;
    }
    if (apiObj is AoiPeripheralAddress_DeviceId) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 2;
      wireObj.kind.DeviceId.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_box_aoi_adapter(
      AoiAdapter apiObj, ffi.Pointer<wire_cst_aoi_adapter> wireObj) {
    cst_api_fill_to_wire_aoi_adapter(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_aoi_peripheral(
      AoiPeripheral apiObj, ffi.Pointer<wire_cst_aoi_peripheral> wireObj) {
    cst_api_fill_to_wire_aoi_peripheral(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_aoi_peripheral_address(
      AoiPeripheralAddress apiObj,
      ffi.Pointer<wire_cst_aoi_peripheral_address> wireObj) {
    cst_api_fill_to_wire_aoi_peripheral_address(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_aoi_adapter(
      AoiAdapter apiObj, ffi.Pointer<wire_cst_aoi_adapter> wireObj) {
    cst_api_fill_to_wire_aoi_adapter(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_aoi_characteristic(
      AoiCharacteristic apiObj,
      ffi.Pointer<wire_cst_aoi_characteristic> wireObj) {
    cst_api_fill_to_wire_aoi_characteristic(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_aoi_connected_peripheral(
      AoiConnectedPeripheral apiObj,
      ffi.Pointer<wire_cst_aoi_connected_peripheral> wireObj) {
    cst_api_fill_to_wire_aoi_connected_peripheral(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_aoi_peripheral(
      AoiPeripheral apiObj, ffi.Pointer<wire_cst_aoi_peripheral> wireObj) {
    cst_api_fill_to_wire_aoi_peripheral(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_filter_criteria(
      FilterCriteria apiObj, ffi.Pointer<wire_cst_filter_criteria> wireObj) {
    cst_api_fill_to_wire_filter_criteria(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_filter_criteria(
      FilterCriteria apiObj, wire_cst_filter_criteria wireObj) {
    if (apiObj is FilterCriteria_Any) {
      var pre_field0 = cst_encode_list_filter_criterion(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Any.field0 = pre_field0;
      return;
    }
    if (apiObj is FilterCriteria_All) {
      var pre_field0 = cst_encode_list_filter_criterion(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.All.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_filter_criterion(
      FilterCriterion apiObj, wire_cst_filter_criterion wireObj) {
    if (apiObj is FilterCriterion_HasServiceUuid) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.HasServiceUuid.field0 = pre_field0;
      return;
    }
    if (apiObj is FilterCriterion_NameMatchesExactly) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.NameMatchesExactly.field0 = pre_field0;
      return;
    }
    if (apiObj is FilterCriterion_NameContains) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 2;
      wireObj.kind.NameContains.field0 = pre_field0;
      return;
    }
    if (apiObj is FilterCriterion_ManufacturerId) {
      var pre_field0 = cst_encode_u_16(apiObj.field0);
      wireObj.tag = 3;
      wireObj.kind.ManufacturerId.field0 = pre_field0;
      return;
    }
    if (apiObj is FilterCriterion_ManufacturerData) {
      var pre_field0 = cst_encode_u_16(apiObj.field0);
      var pre_field1 = cst_encode_list_prim_u_8_strict(apiObj.field1);
      wireObj.tag = 4;
      wireObj.kind.ManufacturerData.field0 = pre_field0;
      wireObj.kind.ManufacturerData.field1 = pre_field1;
      return;
    }
  }

  @protected
  int cst_encode_u_16(int raw);

  @protected
  int cst_encode_u_8(int raw);

  @protected
  void cst_encode_unit(void raw);

  @protected
  int cst_encode_usize(int raw);

  @protected
  void sse_encode_AnyhowException(
      AnyhowException self, SseSerializer serializer);

  @protected
  void sse_encode_StreamSink_aoi_peripheral_Dco(
      RustStreamSink<AoiPeripheral> self, SseSerializer serializer);

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_aoi_adapter(AoiAdapter self, SseSerializer serializer);

  @protected
  void sse_encode_aoi_characteristic(
      AoiCharacteristic self, SseSerializer serializer);

  @protected
  void sse_encode_aoi_connected_peripheral(
      AoiConnectedPeripheral self, SseSerializer serializer);

  @protected
  void sse_encode_aoi_descriptor(AoiDescriptor self, SseSerializer serializer);

  @protected
  void sse_encode_aoi_manufacturer_data(
      AoiManufacturerData self, SseSerializer serializer);

  @protected
  void sse_encode_aoi_peripheral(AoiPeripheral self, SseSerializer serializer);

  @protected
  void sse_encode_aoi_peripheral_address(
      AoiPeripheralAddress self, SseSerializer serializer);

  @protected
  void sse_encode_box_aoi_adapter(AoiAdapter self, SseSerializer serializer);

  @protected
  void sse_encode_box_aoi_peripheral(
      AoiPeripheral self, SseSerializer serializer);

  @protected
  void sse_encode_box_aoi_peripheral_address(
      AoiPeripheralAddress self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_aoi_adapter(
      AoiAdapter self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_aoi_characteristic(
      AoiCharacteristic self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_aoi_connected_peripheral(
      AoiConnectedPeripheral self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_aoi_peripheral(
      AoiPeripheral self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_filter_criteria(
      FilterCriteria self, SseSerializer serializer);

  @protected
  void sse_encode_filter_criteria(
      FilterCriteria self, SseSerializer serializer);

  @protected
  void sse_encode_filter_criterion(
      FilterCriterion self, SseSerializer serializer);

  @protected
  void sse_encode_list_String(List<String> self, SseSerializer serializer);

  @protected
  void sse_encode_list_aoi_adapter(
      List<AoiAdapter> self, SseSerializer serializer);

  @protected
  void sse_encode_list_aoi_characteristic(
      List<AoiCharacteristic> self, SseSerializer serializer);

  @protected
  void sse_encode_list_aoi_descriptor(
      List<AoiDescriptor> self, SseSerializer serializer);

  @protected
  void sse_encode_list_aoi_manufacturer_data(
      List<AoiManufacturerData> self, SseSerializer serializer);

  @protected
  void sse_encode_list_filter_criterion(
      List<FilterCriterion> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_loose(List<int> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_strict(
      Uint8List self, SseSerializer serializer);

  @protected
  void sse_encode_opt_String(String? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_filter_criteria(
      FilterCriteria? self, SseSerializer serializer);

  @protected
  void sse_encode_u_16(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_8_array_6(U8Array6 self, SseSerializer serializer);

  @protected
  void sse_encode_unit(void self, SseSerializer serializer);

  @protected
  void sse_encode_usize(int self, SseSerializer serializer);

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);
}

// Section: wire_class

// ignore_for_file: camel_case_types, non_constant_identifier_names, avoid_positional_boolean_parameters, annotate_overrides, constant_identifier_names
// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint

/// generated by flutter_rust_bridge
class RustLibWire implements BaseWire {
  factory RustLibWire.fromExternalLibrary(ExternalLibrary lib) =>
      RustLibWire(lib.ffiDynamicLibrary);

  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  RustLibWire(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  RustLibWire.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  void store_dart_post_cobject(
    DartPostCObjectFnType ptr,
  ) {
    return _store_dart_post_cobject(
      ptr,
    );
  }

  late final _store_dart_post_cobjectPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(DartPostCObjectFnType)>>(
          'store_dart_post_cobject');
  late final _store_dart_post_cobject = _store_dart_post_cobjectPtr
      .asFunction<void Function(DartPostCObjectFnType)>();

  void wire_aoi_adapter_get_adapters(
    int port_,
  ) {
    return _wire_aoi_adapter_get_adapters(
      port_,
    );
  }

  late final _wire_aoi_adapter_get_adaptersPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_aoi_wire_aoi_adapter_get_adapters');
  late final _wire_aoi_adapter_get_adapters =
      _wire_aoi_adapter_get_adaptersPtr.asFunction<void Function(int)>();

  void wire_aoi_adapter_start_scan(
    int port_,
    ffi.Pointer<wire_cst_aoi_adapter> that,
    ffi.Pointer<wire_cst_filter_criteria> filter,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> sink,
  ) {
    return _wire_aoi_adapter_start_scan(
      port_,
      that,
      filter,
      sink,
    );
  }

  late final _wire_aoi_adapter_start_scanPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_aoi_adapter>,
                  ffi.Pointer<wire_cst_filter_criteria>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_aoi_wire_aoi_adapter_start_scan');
  late final _wire_aoi_adapter_start_scan =
      _wire_aoi_adapter_start_scanPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_aoi_adapter>,
              ffi.Pointer<wire_cst_filter_criteria>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_aoi_adapter_stop_scan(
    int port_,
    ffi.Pointer<wire_cst_aoi_adapter> that,
  ) {
    return _wire_aoi_adapter_stop_scan(
      port_,
      that,
    );
  }

  late final _wire_aoi_adapter_stop_scanPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_aoi_adapter>)>>(
      'frbgen_aoi_wire_aoi_adapter_stop_scan');
  late final _wire_aoi_adapter_stop_scan = _wire_aoi_adapter_stop_scanPtr
      .asFunction<void Function(int, ffi.Pointer<wire_cst_aoi_adapter>)>();

  void wire_aoi_connected_peripheral_disconnect(
    int port_,
    ffi.Pointer<wire_cst_aoi_connected_peripheral> that,
  ) {
    return _wire_aoi_connected_peripheral_disconnect(
      port_,
      that,
    );
  }

  late final _wire_aoi_connected_peripheral_disconnectPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_aoi_connected_peripheral>)>>(
      'frbgen_aoi_wire_aoi_connected_peripheral_disconnect');
  late final _wire_aoi_connected_peripheral_disconnect =
      _wire_aoi_connected_peripheral_disconnectPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_aoi_connected_peripheral>)>();

  void wire_aoi_connected_peripheral_read(
    int port_,
    ffi.Pointer<wire_cst_aoi_connected_peripheral> that,
    ffi.Pointer<wire_cst_aoi_characteristic> characteristic,
  ) {
    return _wire_aoi_connected_peripheral_read(
      port_,
      that,
      characteristic,
    );
  }

  late final _wire_aoi_connected_peripheral_readPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_aoi_connected_peripheral>,
                  ffi.Pointer<wire_cst_aoi_characteristic>)>>(
      'frbgen_aoi_wire_aoi_connected_peripheral_read');
  late final _wire_aoi_connected_peripheral_read =
      _wire_aoi_connected_peripheral_readPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_aoi_connected_peripheral>,
              ffi.Pointer<wire_cst_aoi_characteristic>)>();

  void wire_aoi_connected_peripheral_write(
    int port_,
    ffi.Pointer<wire_cst_aoi_connected_peripheral> that,
    ffi.Pointer<wire_cst_aoi_characteristic> characteristic,
    ffi.Pointer<wire_cst_list_prim_u_8_loose> data,
  ) {
    return _wire_aoi_connected_peripheral_write(
      port_,
      that,
      characteristic,
      data,
    );
  }

  late final _wire_aoi_connected_peripheral_writePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_aoi_connected_peripheral>,
                  ffi.Pointer<wire_cst_aoi_characteristic>,
                  ffi.Pointer<wire_cst_list_prim_u_8_loose>)>>(
      'frbgen_aoi_wire_aoi_connected_peripheral_write');
  late final _wire_aoi_connected_peripheral_write =
      _wire_aoi_connected_peripheral_writePtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_aoi_connected_peripheral>,
              ffi.Pointer<wire_cst_aoi_characteristic>,
              ffi.Pointer<wire_cst_list_prim_u_8_loose>)>();

  void wire_aoi_connected_peripheral_write_without_response(
    int port_,
    ffi.Pointer<wire_cst_aoi_connected_peripheral> that,
    ffi.Pointer<wire_cst_aoi_characteristic> characteristic,
    ffi.Pointer<wire_cst_list_prim_u_8_loose> data,
  ) {
    return _wire_aoi_connected_peripheral_write_without_response(
      port_,
      that,
      characteristic,
      data,
    );
  }

  late final _wire_aoi_connected_peripheral_write_without_responsePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_aoi_connected_peripheral>,
                  ffi.Pointer<wire_cst_aoi_characteristic>,
                  ffi.Pointer<wire_cst_list_prim_u_8_loose>)>>(
      'frbgen_aoi_wire_aoi_connected_peripheral_write_without_response');
  late final _wire_aoi_connected_peripheral_write_without_response =
      _wire_aoi_connected_peripheral_write_without_responsePtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_cst_aoi_connected_peripheral>,
              ffi.Pointer<wire_cst_aoi_characteristic>,
              ffi.Pointer<wire_cst_list_prim_u_8_loose>)>();

  void wire_aoi_peripheral_connect(
    int port_,
    ffi.Pointer<wire_cst_aoi_peripheral> that,
  ) {
    return _wire_aoi_peripheral_connect(
      port_,
      that,
    );
  }

  late final _wire_aoi_peripheral_connectPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_aoi_peripheral>)>>(
      'frbgen_aoi_wire_aoi_peripheral_connect');
  late final _wire_aoi_peripheral_connect = _wire_aoi_peripheral_connectPtr
      .asFunction<void Function(int, ffi.Pointer<wire_cst_aoi_peripheral>)>();

  ffi.Pointer<wire_cst_aoi_adapter> cst_new_box_aoi_adapter() {
    return _cst_new_box_aoi_adapter();
  }

  late final _cst_new_box_aoi_adapterPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_cst_aoi_adapter> Function()>>(
          'frbgen_aoi_cst_new_box_aoi_adapter');
  late final _cst_new_box_aoi_adapter = _cst_new_box_aoi_adapterPtr
      .asFunction<ffi.Pointer<wire_cst_aoi_adapter> Function()>();

  ffi.Pointer<wire_cst_aoi_peripheral> cst_new_box_aoi_peripheral() {
    return _cst_new_box_aoi_peripheral();
  }

  late final _cst_new_box_aoi_peripheralPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_aoi_peripheral> Function()>>(
      'frbgen_aoi_cst_new_box_aoi_peripheral');
  late final _cst_new_box_aoi_peripheral = _cst_new_box_aoi_peripheralPtr
      .asFunction<ffi.Pointer<wire_cst_aoi_peripheral> Function()>();

  ffi.Pointer<wire_cst_aoi_peripheral_address>
      cst_new_box_aoi_peripheral_address() {
    return _cst_new_box_aoi_peripheral_address();
  }

  late final _cst_new_box_aoi_peripheral_addressPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_aoi_peripheral_address>
              Function()>>('frbgen_aoi_cst_new_box_aoi_peripheral_address');
  late final _cst_new_box_aoi_peripheral_address =
      _cst_new_box_aoi_peripheral_addressPtr.asFunction<
          ffi.Pointer<wire_cst_aoi_peripheral_address> Function()>();

  ffi.Pointer<wire_cst_aoi_adapter> cst_new_box_autoadd_aoi_adapter() {
    return _cst_new_box_autoadd_aoi_adapter();
  }

  late final _cst_new_box_autoadd_aoi_adapterPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_cst_aoi_adapter> Function()>>(
          'frbgen_aoi_cst_new_box_autoadd_aoi_adapter');
  late final _cst_new_box_autoadd_aoi_adapter =
      _cst_new_box_autoadd_aoi_adapterPtr
          .asFunction<ffi.Pointer<wire_cst_aoi_adapter> Function()>();

  ffi.Pointer<wire_cst_aoi_characteristic>
      cst_new_box_autoadd_aoi_characteristic() {
    return _cst_new_box_autoadd_aoi_characteristic();
  }

  late final _cst_new_box_autoadd_aoi_characteristicPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_aoi_characteristic> Function()>>(
      'frbgen_aoi_cst_new_box_autoadd_aoi_characteristic');
  late final _cst_new_box_autoadd_aoi_characteristic =
      _cst_new_box_autoadd_aoi_characteristicPtr
          .asFunction<ffi.Pointer<wire_cst_aoi_characteristic> Function()>();

  ffi.Pointer<wire_cst_aoi_connected_peripheral>
      cst_new_box_autoadd_aoi_connected_peripheral() {
    return _cst_new_box_autoadd_aoi_connected_peripheral();
  }

  late final _cst_new_box_autoadd_aoi_connected_peripheralPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_aoi_connected_peripheral> Function()>>(
      'frbgen_aoi_cst_new_box_autoadd_aoi_connected_peripheral');
  late final _cst_new_box_autoadd_aoi_connected_peripheral =
      _cst_new_box_autoadd_aoi_connected_peripheralPtr.asFunction<
          ffi.Pointer<wire_cst_aoi_connected_peripheral> Function()>();

  ffi.Pointer<wire_cst_aoi_peripheral> cst_new_box_autoadd_aoi_peripheral() {
    return _cst_new_box_autoadd_aoi_peripheral();
  }

  late final _cst_new_box_autoadd_aoi_peripheralPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_aoi_peripheral> Function()>>(
      'frbgen_aoi_cst_new_box_autoadd_aoi_peripheral');
  late final _cst_new_box_autoadd_aoi_peripheral =
      _cst_new_box_autoadd_aoi_peripheralPtr
          .asFunction<ffi.Pointer<wire_cst_aoi_peripheral> Function()>();

  ffi.Pointer<wire_cst_filter_criteria> cst_new_box_autoadd_filter_criteria() {
    return _cst_new_box_autoadd_filter_criteria();
  }

  late final _cst_new_box_autoadd_filter_criteriaPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_filter_criteria> Function()>>(
      'frbgen_aoi_cst_new_box_autoadd_filter_criteria');
  late final _cst_new_box_autoadd_filter_criteria =
      _cst_new_box_autoadd_filter_criteriaPtr
          .asFunction<ffi.Pointer<wire_cst_filter_criteria> Function()>();

  ffi.Pointer<wire_cst_list_String> cst_new_list_String(
    int len,
  ) {
    return _cst_new_list_String(
      len,
    );
  }

  late final _cst_new_list_StringPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_String> Function(
              ffi.Int32)>>('frbgen_aoi_cst_new_list_String');
  late final _cst_new_list_String = _cst_new_list_StringPtr
      .asFunction<ffi.Pointer<wire_cst_list_String> Function(int)>();

  ffi.Pointer<wire_cst_list_aoi_adapter> cst_new_list_aoi_adapter(
    int len,
  ) {
    return _cst_new_list_aoi_adapter(
      len,
    );
  }

  late final _cst_new_list_aoi_adapterPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_aoi_adapter> Function(
              ffi.Int32)>>('frbgen_aoi_cst_new_list_aoi_adapter');
  late final _cst_new_list_aoi_adapter = _cst_new_list_aoi_adapterPtr
      .asFunction<ffi.Pointer<wire_cst_list_aoi_adapter> Function(int)>();

  ffi.Pointer<wire_cst_list_aoi_characteristic> cst_new_list_aoi_characteristic(
    int len,
  ) {
    return _cst_new_list_aoi_characteristic(
      len,
    );
  }

  late final _cst_new_list_aoi_characteristicPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_aoi_characteristic> Function(
              ffi.Int32)>>('frbgen_aoi_cst_new_list_aoi_characteristic');
  late final _cst_new_list_aoi_characteristic =
      _cst_new_list_aoi_characteristicPtr.asFunction<
          ffi.Pointer<wire_cst_list_aoi_characteristic> Function(int)>();

  ffi.Pointer<wire_cst_list_aoi_descriptor> cst_new_list_aoi_descriptor(
    int len,
  ) {
    return _cst_new_list_aoi_descriptor(
      len,
    );
  }

  late final _cst_new_list_aoi_descriptorPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_aoi_descriptor> Function(
              ffi.Int32)>>('frbgen_aoi_cst_new_list_aoi_descriptor');
  late final _cst_new_list_aoi_descriptor = _cst_new_list_aoi_descriptorPtr
      .asFunction<ffi.Pointer<wire_cst_list_aoi_descriptor> Function(int)>();

  ffi.Pointer<wire_cst_list_aoi_manufacturer_data>
      cst_new_list_aoi_manufacturer_data(
    int len,
  ) {
    return _cst_new_list_aoi_manufacturer_data(
      len,
    );
  }

  late final _cst_new_list_aoi_manufacturer_dataPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_aoi_manufacturer_data> Function(
              ffi.Int32)>>('frbgen_aoi_cst_new_list_aoi_manufacturer_data');
  late final _cst_new_list_aoi_manufacturer_data =
      _cst_new_list_aoi_manufacturer_dataPtr.asFunction<
          ffi.Pointer<wire_cst_list_aoi_manufacturer_data> Function(int)>();

  ffi.Pointer<wire_cst_list_filter_criterion> cst_new_list_filter_criterion(
    int len,
  ) {
    return _cst_new_list_filter_criterion(
      len,
    );
  }

  late final _cst_new_list_filter_criterionPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_filter_criterion> Function(
              ffi.Int32)>>('frbgen_aoi_cst_new_list_filter_criterion');
  late final _cst_new_list_filter_criterion = _cst_new_list_filter_criterionPtr
      .asFunction<ffi.Pointer<wire_cst_list_filter_criterion> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_u_8_loose> cst_new_list_prim_u_8_loose(
    int len,
  ) {
    return _cst_new_list_prim_u_8_loose(
      len,
    );
  }

  late final _cst_new_list_prim_u_8_loosePtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_prim_u_8_loose> Function(
              ffi.Int32)>>('frbgen_aoi_cst_new_list_prim_u_8_loose');
  late final _cst_new_list_prim_u_8_loose = _cst_new_list_prim_u_8_loosePtr
      .asFunction<ffi.Pointer<wire_cst_list_prim_u_8_loose> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_new_list_prim_u_8_strict(
    int len,
  ) {
    return _cst_new_list_prim_u_8_strict(
      len,
    );
  }

  late final _cst_new_list_prim_u_8_strictPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_prim_u_8_strict> Function(
              ffi.Int32)>>('frbgen_aoi_cst_new_list_prim_u_8_strict');
  late final _cst_new_list_prim_u_8_strict = _cst_new_list_prim_u_8_strictPtr
      .asFunction<ffi.Pointer<wire_cst_list_prim_u_8_strict> Function(int)>();

  int dummy_method_to_enforce_bundling() {
    return _dummy_method_to_enforce_bundling();
  }

  late final _dummy_method_to_enforce_bundlingPtr =
      _lookup<ffi.NativeFunction<ffi.Int64 Function()>>(
          'dummy_method_to_enforce_bundling');
  late final _dummy_method_to_enforce_bundling =
      _dummy_method_to_enforce_bundlingPtr.asFunction<int Function()>();
}

typedef DartPostCObjectFnType
    = ffi.Pointer<ffi.NativeFunction<DartPostCObjectFnTypeFunction>>;
typedef DartPostCObjectFnTypeFunction = ffi.Bool Function(
    DartPort port_id, ffi.Pointer<ffi.Void> message);
typedef DartDartPostCObjectFnTypeFunction = bool Function(
    DartDartPort port_id, ffi.Pointer<ffi.Void> message);
typedef DartPort = ffi.Int64;
typedef DartDartPort = int;

final class wire_cst_aoi_adapter extends ffi.Struct {
  @ffi.UintPtr()
  external int index;
}

final class wire_cst_list_prim_u_8_strict extends ffi.Struct {
  external ffi.Pointer<ffi.Uint8> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_FilterCriterion_HasServiceUuid extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_FilterCriterion_NameMatchesExactly extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_FilterCriterion_NameContains extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_FilterCriterion_ManufacturerId extends ffi.Struct {
  @ffi.Uint16()
  external int field0;
}

final class wire_cst_FilterCriterion_ManufacturerData extends ffi.Struct {
  @ffi.Uint16()
  external int field0;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field1;
}

final class FilterCriterionKind extends ffi.Union {
  external wire_cst_FilterCriterion_HasServiceUuid HasServiceUuid;

  external wire_cst_FilterCriterion_NameMatchesExactly NameMatchesExactly;

  external wire_cst_FilterCriterion_NameContains NameContains;

  external wire_cst_FilterCriterion_ManufacturerId ManufacturerId;

  external wire_cst_FilterCriterion_ManufacturerData ManufacturerData;
}

final class wire_cst_filter_criterion extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external FilterCriterionKind kind;
}

final class wire_cst_list_filter_criterion extends ffi.Struct {
  external ffi.Pointer<wire_cst_filter_criterion> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_FilterCriteria_Any extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_filter_criterion> field0;
}

final class wire_cst_FilterCriteria_All extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_filter_criterion> field0;
}

final class FilterCriteriaKind extends ffi.Union {
  external wire_cst_FilterCriteria_Any Any;

  external wire_cst_FilterCriteria_All All;
}

final class wire_cst_filter_criteria extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external FilterCriteriaKind kind;
}

final class wire_cst_AoiPeripheralAddress_MacAddress extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_AoiPeripheralAddress_Uuid extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_AoiPeripheralAddress_DeviceId extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class AoiPeripheralAddressKind extends ffi.Union {
  external wire_cst_AoiPeripheralAddress_MacAddress MacAddress;

  external wire_cst_AoiPeripheralAddress_Uuid Uuid;

  external wire_cst_AoiPeripheralAddress_DeviceId DeviceId;
}

final class wire_cst_aoi_peripheral_address extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external AoiPeripheralAddressKind kind;
}

final class wire_cst_list_String extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<wire_cst_list_prim_u_8_strict>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_aoi_manufacturer_data extends ffi.Struct {
  @ffi.Uint16()
  external int manufacturer_id;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> data;
}

final class wire_cst_list_aoi_manufacturer_data extends ffi.Struct {
  external ffi.Pointer<wire_cst_aoi_manufacturer_data> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_aoi_peripheral extends ffi.Struct {
  external ffi.Pointer<wire_cst_aoi_adapter> adapter;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> name;

  external ffi.Pointer<wire_cst_aoi_peripheral_address> address;

  external ffi.Pointer<wire_cst_list_String> services;

  external ffi.Pointer<wire_cst_list_aoi_manufacturer_data> manufacturer_data;
}

final class wire_cst_aoi_descriptor extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> uuid;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> service_uuid;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> characteristic_uuid;
}

final class wire_cst_list_aoi_descriptor extends ffi.Struct {
  external ffi.Pointer<wire_cst_aoi_descriptor> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_aoi_characteristic extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> uuid;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> service_uuid;

  @ffi.Uint8()
  external int properties_bits;

  external ffi.Pointer<wire_cst_list_aoi_descriptor> descriptors;
}

final class wire_cst_list_aoi_characteristic extends ffi.Struct {
  external ffi.Pointer<wire_cst_aoi_characteristic> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_aoi_connected_peripheral extends ffi.Struct {
  external ffi.Pointer<wire_cst_aoi_peripheral> peripheral;

  external ffi.Pointer<wire_cst_list_aoi_characteristic> characteristics;
}

final class wire_cst_list_prim_u_8_loose extends ffi.Struct {
  external ffi.Pointer<ffi.Uint8> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_aoi_adapter extends ffi.Struct {
  external ffi.Pointer<wire_cst_aoi_adapter> ptr;

  @ffi.Int32()
  external int len;
}
